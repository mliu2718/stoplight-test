openapi: 3.0.0
info:
  title: real time monitor
  version: '1.0'
servers:
  - url: 'https://api.conviva.com'
paths:
  '/metrics/v2/subscriptions/{subscription_id}':
    parameters:
      - schema:
          type: string
        name: subscription_id
        in: path
        required: true
        description: subscription ID
    get:
      summary: Get Subscription Info by Subscription ID
      tags: []
      responses:
        '200':
          description: Subscription Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionResponse'
              examples:
                Get Subscription Example:
                  value:
                    id: 142
                    created: 1612898665486
                    discription: this is used by ops team to monitor number of plays
                    metric: plays
                    filters:
                      - field: country
                        op: '='
                        value: US
                    series:
                      - name: plays_total
                        filters: []
                      - name: plays_state=CA
                        filters:
                          - field: state
                            op: '='
                            value: CA
                    metric_endpoint: 'https://api.conviva.com/metrics/v2/endpoints/142'
        '404':
          description: Subscription Not Found
        '500':
          description: Internal Server Error
      operationId: get-users-userId
      description: Retrieve the information of the subscription with the matching subscription ID.
    patch:
      summary: Update Subscription Information
      operationId: patch-users-userId
      responses:
        '200':
          description: Subscription Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              examples:
                Updated User Rebecca Baker:
                  value:
                    id: 13
                    firstName: Rebecca
                    lastName: Baker
                    email: rebecca@gmail.com
                    dateOfBirth: '1985-10-02'
                    emailVerified: false
                    createDate: '2019-08-24'
        '404':
          description: Subscription Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
      description: Update the infromation of an existing subscription.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Subscription'
            examples:
              Update First Name:
                value:
                  firstName: Rebecca
              Update Email:
                value:
                  email: rebecca@gmail.com
              Update Last Name & Date of Birth:
                value:
                  lastName: Baker
                  dateOfBirth: '1985-10-02'
        description: Patch user properties to update.
    delete:
      summary: Delete a Subscription
      operationId: delete-metrics-v2-subscriptions-subscription_id
      responses:
        '200':
          description: OK
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
  /metrics/v2/subscriptions:
    get:
      summary: List metric subscriptions
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SubscriptionResponse'
      operationId: get-metrics-v2-subscriptions
      description: List all metric subscriptions.
    post:
      summary: Create a new metric subscription
      operationId: post-metrics-v2-subscriptions
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                  message:
                    type: string
              examples:
                error message 1:
                  value:
                    code: '400'
                    message: the number of active subscriptions exceeds quota limit.
      description: Create a new metric subscription
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Subscription'
        description: ''
  /metrics/v2/definitions:
    get:
      summary: List all Metric Definitions
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                    type:
                      type: string
                    fields:
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                          type:
                            type: string
      operationId: get-metrics-v2-fields
      description: List all metrics definitions.
    parameters: []
  '/metrics/v2/endpoints/{endpoint_id}':
    get:
      summary: Pull Metric Time Series
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  metric:
                    $ref: '#/components/schemas/Metric'
                  cursor:
                    type: object
                    properties:
                      after:
                        type: integer
                      before:
                        type: integer
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        time:
                          type: integer
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      operationId: get-metrics-v2-endpoints
      parameters:
        - schema:
            type: integer
          in: query
          name: before
          description: UTC timestamp
        - schema:
            type: integer
          in: query
          name: after
          description: UTC timestamp
      description: Pull metric time series.
    parameters:
      - schema:
          type: string
        name: endpoint_id
        in: path
        required: true
components:
  schemas:
    FilterCondition:
      title: FilterCondition
      type: object
      properties:
        field:
          type: string
        op:
          type: string
        value:
          type: string
      x-examples:
        example-1:
          field: string
          op: string
          value: string
    Field:
      title: Field
      type: object
      properties:
        name:
          type: string
        type:
          type: string
        description:
          type: string
    Subscription:
      title: SubscriptionResponse
      type: object
      properties:
        id:
          type: string
        created:
          type: integer
        description:
          type: string
        filters:
          type: array
          items:
            $ref: ''
        metric:
          type: string
        series:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              filters:
                type: array
                items:
                  $ref: '#/components/schemas/FilterCondition'
        metric_endpoint:
          type: string
        granularity:
          type: string
    Metric:
      title: Metric
      type: object
      properties:
        name:
          type: string
        type:
          type: string
        description:
          type: string
  securitySchemes:
    auth:
      type: http
      scheme: basic
security:
  - auth: []
